name: Build and Release Extensions

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Select latest Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      - name: Get Xcode version
        run: echo "XCODE_VERSION=$(xcodebuild -version | awk 'NR==1{print $2}')" >> $GITHUB_ENV

      - name: Cache build artifacts (.build)
        uses: actions/cache@v4
        id: build-cache
        with:
          path: .build
          key: build-${{ runner.os }}-${{ runner.arch }}-xcode-${{ env.XCODE_VERSION }}-${{ hashFiles('Package.swift', 'Package.resolved', 'SwiftGodot/Package.swift', 'SwiftGodot/Package.resolved', 'build.sh') }}
          restore-keys: |
            build-${{ runner.os }}-${{ runner.arch }}-xcode-${{ env.XCODE_VERSION }}-
            build-${{ runner.os }}-${{ runner.arch }}-
            build-${{ runner.os }}-

      - name: Report Cache Status
        run: |
          if [ "${{ steps.build-cache.outputs.cache-hit }}" = "true" ]; then
            echo "✅ Build cache restored successfully."
          else
            echo "ℹ️ Build cache not found. A full build will be performed and cached for next time."
          fi

      - name: Run build script
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Prepare Release Package
        run: |
          mkdir -p staging/addons/ios
          mkdir -p staging/addons/macos

          echo "Copying built libraries..."
          cp -R Bin/ios/* staging/addons/ios/
          cp -R Bin/macos/* staging/addons/macos/

          echo "Creating .gdextension files..."
          
          # --- GameCenter.gdextension ---
          cat > staging/GameCenter.gdextension <<EOF
          [configuration]
          entry_symbol = "swift_entry_point"
          compatibility_minimum = "4.2"

          [libraries]
          macos.release = "res://addons/macos/libGameCenter.dylib"
          ios.release = "res://addons/ios/GameCenter.framework"
          
          [dependencies]
          macos.release = {"res://addons/macos/SwiftGodot.framework" : ""}
          ios.release = {"res://addons/ios/SwiftGodot.framework" : ""}
          EOF

          # --- Bonjour.gdextension ---
          cat > staging/Bonjour.gdextension <<EOF
          [configuration]
          entry_symbol = "swift_entry_point"
          compatibility_minimum = "4.2"
          
          [libraries]
          macos.release = "res://addons/macos/libBonjour.dylib"
          ios.release = "res://addons/ios/Bonjour.framework"

          [dependencies]
          macos.release = {"res://addons/macos/SwiftGodot.framework" : ""}
          ios.release = {"res://addons/ios/SwiftGodot.framework" : ""}
          EOF
          
          # --- Haptics.gdextension ---
          cat > staging/Haptics.gdextension <<EOF
          [configuration]
          entry_symbol = "swift_entry_point"
          compatibility_minimum = "4.2"
          
          [libraries]
          macos.release = "res://addons/macos/libHaptics.dylib"
          ios.release = "res://addons/ios/Haptics.framework"

          [dependencies]
          macos.release = {"res://addons/macos/SwiftGodot.framework" : ""}
          ios.release = {"res://addons/ios/SwiftGodot.framework" : ""}
          EOF
          
          # --- InAppPurchase.gdextension ---
          cat > staging/InAppPurchase.gdextension <<EOF
          [configuration]
          entry_symbol = "swift_entry_point"
          compatibility_minimum = "4.2"

          [libraries]
          macos.release = "res://addons/macos/libInAppPurchase.dylib"
          ios.release = "res://addons/ios/InAppPurchase.framework"

          [dependencies]
          macos.release = {"res://addons/macos/SwiftGodot.framework" : ""}
          ios.release = {"res://addons/ios/SwiftGodot.framework" : ""}
          EOF

          # --- Settings.gdextension ---
          cat > staging/Settings.gdextension <<EOF
          [configuration]
          entry_symbol = "swift_entry_point"
          compatibility_minimum = "4.2"

          [libraries]
          macos.release = "res://addons/macos/libSettings.dylib"
          ios.release = "res://addons/ios/Settings.framework"

          [dependencies]
          macos.release = {"res://addons/macos/SwiftGodot.framework" : ""}
          ios.release = {"res://addons/ios/SwiftGodot.framework" : ""}
          EOF
          
          echo "Creating ZIP archive..."
          (cd staging && zip -r ../godot-ios-extensions.zip .)

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: godot-ios-extensions.zip
